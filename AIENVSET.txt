@@@@@@@@@@@@@@@@@@@@@@@1부터순서대로세팅하기@@@@@@@@@@@@@@@@@@@@@@@

1. 파이썬 코딩 환경 세팅하기 (2025.09.19)
https://climate-data-science.tistory.com/67?category=1443708

2. 딥러닝을 이용한 자연어 처리 입문 (2025.9.19)
https://wikidocs.net/book/2155

3. 초보자를 위한 git과 Github 시작하기
https://modulabs.co.kr/blog/git-and-github-for-beginners
-------------------------------------------------------------------------------------------------------------------------------------
@@@@@@@@@@@@@@@아래는중요한부분작성한기초내용이니꼭한번씩읽어보기@@@@@@@@@@@@@@@@@

[아나콘다]
- 설치할 때 기존에 깔려있던 파이썬을 삭제하고 다시 설치해야함 (버전충돌문제)
[라이브러리]
- 주요한 기능의 여러 코드를 모아둔 것
- 파이썬뿐만 아니라, 라이브러리도 여러 버전이있음 
- 파이썬을 사용하면 버전 호환성 문제가 생길 수 밖에 없음
- 이를 관리하기 위해, 가상환경 구성하여 사용
[가상환경]
- 대표적인 가상환경 관리도구로, 아나콘다(anaconda)가 있음, 이 외 docker라는 프로그램도 있음
- 단순히 파이썬 버전문제 뿐만 아니라 라이브러리 간 버전 호환성 문제도 있음
- ex) A,B 작업을 해야할때 A작업은 파이썬 3.8버전, B작업은 파이썬 3.13버전을 써야한다고할때 A와 B를 가상환경으로 따로 구성해주어야함
- 새로운 프로젝트를 할 때 새로운 가상환경을 만들어야함
- 아나콘다는 Jupyter Notebook이라는 것이 기본적으로 포함되어있음
[CLI, GLI]
- CLI : Command Line Interface - 키보드로 문자를 친 뒤 엔터를 쳐서 컴퓨터에게 명령을 함
- GUI : Graphic User Interface - 그래픽을 눈으로 보고 마우스, 키보드로 상호작용해서 프로그램을 다룸
[Jupyter Notebook]
- 아나콘다 설치하면 자동으로 깔려있음
- 내가 원하는 만든 폴더에 주소창에 cmd 입력하고 Jupyter Notebook 쳐서 실행가능
- 웹 기반의 대화형 개발 환경임 > 코드와 실행 결과를 즉시 확인할 수 있음
- 코드와 문서의 결합, 대화형 실행, 다양한 언어지원, 시각화 용이
- 단순히 코드 작성을 넘어, 분석과정과 결과물을 하나의 이야기처럼 정리하고 공유하는데 최적화된 도구
- 브라우저 닫았어도 명령 프롬프트에 URL 있음, 명령프롬프트 닫았다면 다시 명령프롬프트열고 Jupyter Notebook 입력하면됨
[확장자 : .py 와 .ipynb]
- 데이터 분석에서는 1.데이터읽기 / 2.데이터처리 / 3.데이터시각화 를 하게됨
- py 확장자로 작성하면 1/2/3을 모두 하나의 py 파일로 구현해야함
- 시각화 작업을 글자 크기 1포인트 변경, 위치 1포인트 변경처럼 눈으로 보고 노가다 작업을 하는 경우가 많은데, 1/2/3이 하나의 코드로 동작한다면 3에서의 노가다 작업 결과를 확인하기 위해 1/2 모두 작업을 수행해야하는 번거로움이 있어 비효율적임
- ipynb 확장자는 1/2에 해당하는 코드를 따로 만들어서 그림 그릴 데이터를 따로 저장하고 3코드를 따로 만들거나 해서 효율적으로 작업 가능
- ipynb는 JUPYTER NOTEBOOK에서 사용하는 확장자명임 : 사용자와 코드가 상호작용(interactive)하며 작업가능 (Colab이나 Jupyter Notebook처럼 작업이 가능하다는 말)
[용어정리]
- 가상환경 : anaconda, poetry, docker 등
- 라이브러리 : pandas, numpy, pytorch 등
- 웹기반대화형개발환경 : jupyter notebook, colab(클라우드기반 주피터노트북환경) 등
- 통합개발환경(IDE) : Visual Studio(C#, C++, F#등 다양한 언어 지원), Pycharm(파이썬 개발 특화), VS code(코드에디터) 등
[가상환경-라이브러리설치]
- A 작업을 할 땐 a 가상환경을 활성화하고, B 작업을 할 땐 b 가상환경을 활성화하고 그런 식
- 라이브러리 : 특정 작업을 처리하기 위해 만든 코드(함수, 클래스 등) 모음집
- 패키지 : 코드들을 폴더구조로 잘 정리한것
- 하지만 라이브러리, 패키지란 단어를 엄청 구분해서 쓰지는 않음
- 일단 가장 빠른 pip로 깔아보고 호환성 문제 생기면 conda로 설치
- github에 올린 코드 복사/설치 : pip install -r requirements.txt
[ipython이란]
- Interactive Python의 줄임말
- 파이썬을 더 편하게 쓸 수 있게 해주는 대화형 쉘(interpreter)
- 그냥 python 터미널보다 기능이 훨씬 풍부
- Jupyter notebook 기반 / 주피터도 내부적으로 ipython 커널 사용
[설치와 임포트]
- 설치(환경에라이브러리추가) : 주로, pip install 라이브러리명 
- 임포트(파이썬코드안에서실행) : 
① import 라이브러리명
② import 라이브러리명 as 별칭
③ from 라이브러리명 import 함수/클래스
-------------------------------------------------------------------------------------------------------------------------------------
※ 아나콘다를 설치했다면 기본적으로 Numpy, Pandas, Jupyter notebook, scikit-learn, matplotlib, seaborn, nltk 등이 이미 설치되어져 있음
※ 아나콘다에 포함되어있지 않은 tensorflow, keras, gensim과 같은 패키지만 별도로 pip를 통해 설치해야함
[라이브러리]
1. 텐서플로우(Tensorflow) : pip install tensorflow
- 구글이 2015년에 공개한 머신 러닝 오픈소스 라이브러리
- 머신 러닝과 딥 러닝을 직관적이고 손쉽게 할 수 있도록 설계
2. 케라스(Keras) : pip install keras
- 딥 러닝 프레임워크인 텐서플로우에 대한 추상화 된 API를 제공
- 백엔드로 텐서플로우를 사용하며, 좀 더 쉽게 딥 러닝을 사용할 수 있게 해줌
- 쉽게 말해, 텐서플로우 코드를 훨씬 간단하게 작성할 수 있게됨
3. 젠심(Gensim) : pip install gensim
- 머신 러닝을 사용하여 토픽 모델링과 자연어 처리 등을 수행할 수 있게 해주는 오픈 소스 라이브러리
-  Word2Vec 등 다양한 모델들을 학습가능
4. 사이킷런(Scikit-learn) : pip install scikit-learn
- 파이썬 머신러닝 라이브러리
- 나이브 베이즈 분류, 서포트 벡터 머신 등 다양한 머신 러닝 모듈을 불러올 수 있음
- 머신러닝을 연습하기 위한 아이리스 데이터, 당뇨병 데이터 등 자체 데이터 또한 제공
5. 주피터노트북(Jupyter Notebook) : pip install jupyter
- 웹에서 코드를 작성하고 실행할 수 있는 오픈소스 웹 어플리케이션

※ 아래 6,7,8은 『데이터 분석을 위한 필수 패키지 삼대장』
※ 개념을 익히기위해 예제 한번씩 돌려보면서 확인하기 : https://wikidocs.net/32829
※ 튜플(tuple)과 딕셔너리(dictionary) : 파이썬에서 자주 쓰이는 자료형, 개념 알아두기

6. 판다스(Pandas) : pip install pandas
- 파이썬 데이터 처리를 위한 라이브러리
- 데이터 분석과 같은 작업에서 필수 라이브러리
- 총 세가지의 데이터 구조 사용
① 시리즈(Series)
② 데이터프레임(DataFrame)
③ 패널(Panel)
- 이 중 데이터프레임이 가장 많이 사용
7. 넘파이(Numpy) : pip install numpy
- 수치 데이터를 다루는 파이썬 패키지
- Numpy의 핵심이라고 불리는 다차원 행렬 자료구조인 ndarray를 통해 벡터 및 행렬을 사용하는 선형 대수 계산에서 주로 사용
- 편의성뿐만 아니라, 속도면에서도 순수 파이썬에 비해 압도적으로 빠르다는 장점이 있음
8. 맷플롯립(Matplotlib) : pip install matplotlib
- 데이터를 차트(chart)나 플롯(plot)으로 시각화하는 패키지
- 데이터 분석에서 Matplotlib은 데이터 분석 이전에 데이터 이해를 위한 시각화나, 데이터 분석 후에 결과를 시각화하기 위해서 사용
-------------------------------------------------------------------------------------------------------------------------------------
[머신러닝/딥러닝]
- 머신러닝의 개념념과 ① 선형 회귀, ② 로지스틱 회귀, ③ 소프트맥스 회귀와 같은 기본적인 모델을 이해해야함
- 이러한 이해를 바탕으로 기본적인 모델로부터 딥 러닝 모델로 개념을 확장할 수 있음
[트랜스포머]
- seq2seq / 어텐션 메커니즘 / 트랜스포머(Transformer)는 2017년 구글이 발표한 논문인 "Attention is all you need"에서 나온 모델
- 인코더-디코더구조로 설계 but RNN보다 우수한 성능
- 어텐션을 RNN의 보정을 위한 용도로서 사용하는 것이 아니라 어텐션만으로 인코더와 디코더를 만듬 > 트랜스포머